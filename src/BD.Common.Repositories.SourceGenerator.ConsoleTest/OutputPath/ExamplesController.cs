#nullable enable
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由包 BD.Common.Repositories.SourceGenerator 源生成。
//     运行时版本：4.8.9139.0
//     编译器版本：4.6.0-3.23259.8 (c3cc1d0c)
//     生成器版本：1.23.10613.11400 (c239958a)
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
// ReSharper disable once CheckNamespace
namespace BD.Common.Repositories.SourceGenerator.ConsoleTest.Controllers;

/// <summary>
/// 示例 - 后台管理控制器
/// </summary>
[Route("ms/accelerator/examples")]
public sealed partial class ExamplesController : BaseAuthorizeController<ExamplesController>
{
    const string ControllerName = "Examples";
    readonly IExampleRepository exampleRepo;
    readonly ISysMenuRepository sysMenuRepo;

    public ExamplesController(
        ILogger<ExamplesController> logger,
        IExampleRepository exampleRepo,
        ISysMenuRepository sysMenuRepo) : base(logger)
    {
        this.exampleRepo = exampleRepo;
        this.sysMenuRepo = sysMenuRepo;
    }

    /// <summary>
    /// 获取用于【选择框/下拉列表(Select)】的数据
    /// <para>Local: https://localhost:7129/ms/accelerator/examples/select</para>
    /// <para>Development: /ms/accelerator/examples/select</para>
    /// </summary>
    /// <returns>用于【选择框/下拉列表(Select)】的数据</returns>
    [HttpGet("select"), PermissionFilter(ControllerName + nameof(SysButtonType.Query))]
    public async Task<ApiResponse<SelectItemDTO<Guid>[]>> Select()
    {
        var r = await exampleRepo.GetSelectAsync();
        return r;
    }

    /// <summary>
    /// 根据【主键】设置设置【是否禁用】
    /// <para>Local: https://localhost:7129/ms/accelerator/examples/disable/{id}/{disable}</para>
    /// <para>Development: /ms/accelerator/examples/disable/{id}/{disable}</para>
    /// </summary>
    /// <param name="id">主键</param>
    /// <param name="disable">是否禁用，当值为 <see langword="true"/> 时禁用，为 <see langword="false"/> 时启用</param>
    /// <returns>受影响的行数</returns>
    [HttpPut("disable/{id}/{disable}"), PermissionFilter(ControllerName + nameof(SysButtonType.Edit))]
    public async Task<ApiResponse<int>> Disable([FromRoute] Guid id, [FromRoute] bool disable)
    {
        if (!TryGetUserId(out Guid userId))
            throw new ArgumentNullException(nameof(userId));
        var r = await exampleRepo.SetDisableByIdAsync(userId, id, disable);
        return new ApiResponse<int>()
        {
            IsSuccess = r > 0,
            Data = r,
        };
    }

    /// <summary>
    /// 根据【主键】获取【编辑模型】
    /// <para>Local: https://localhost:7129/ms/accelerator/examples/{id}</para>
    /// <para>Development: /ms/accelerator/examples/{id}</para>
    /// </summary>
    /// <param name="id">主键</param>
    /// <returns>编辑模型</returns>
    [HttpGet("{id}"), PermissionFilter(ControllerName + nameof(SysButtonType.Detail))]
    public async Task<ApiResponse<EditExampleDTO?>> EditById([FromRoute] Guid id)
    {
        var r = await exampleRepo.GetEditByIdAsync(id);
        return r;
    }

    /// <summary>
    /// 根据【编辑模型】更新一条数据
    /// <para>Local: https://localhost:7129/ms/accelerator/examples/{id}</para>
    /// <para>Development: /ms/accelerator/examples/{id}</para>
    /// </summary>
    /// <param name="id">主键</param>
    /// <param name="model">编辑模型</param>
    /// <returns>受影响的行数</returns>
    [HttpPut("{id}"), PermissionFilter(ControllerName + nameof(SysButtonType.Edit))]
    public async Task<ApiResponse<int>> Update([FromRoute] Guid id, [FromBody] EditExampleDTO model)
    {
        if (!TryGetUserId(out Guid userId))
            throw new ArgumentNullException(nameof(userId));
        var r = await exampleRepo.UpdateAsync(userId, id, model);
        return r;
    }

    /// <summary>
    /// 根据【添加模型】新增一条数据
    /// <para>Local: https://localhost:7129/ms/accelerator/examples</para>
    /// <para>Development: /ms/accelerator/examples</para>
    /// </summary>
    /// <param name="model">添加模型</param>
    /// <returns>受影响的行数</returns>
    [HttpPost, PermissionFilter(ControllerName + nameof(SysButtonType.Add))]
    public async Task<ApiResponse<int>> Insert([FromBody] AddExampleDTO model)
    {
        var r = await exampleRepo.InsertAsync(model);
        return r;
    }

    /// <summary>
    /// 分页查询示例表格
    /// <para>Local: https://localhost:7129/ms/accelerator/examples</para>
    /// <para>Development: /ms/accelerator/examples</para>
    /// </summary>
    /// <param name="title">标题</param>
    /// <param name="disable">是否禁用</param>
    /// <param name="fileName">文件名</param>
    /// <param name="url">访问地址</param>
    /// <param name="createUser">创建人（创建此条目的后台管理员）</param>
    /// <param name="creationTime">创建时间</param>
    /// <param name="operatorUser">最后一次操作的人（记录后台管理员禁用或启用或编辑该条的操作）</param>
    /// <param name="name">名称</param>
    /// <param name="email">邮箱</param>
    /// <param name="architecture">Architecture</param>
    /// <param name="gender">性别</param>
    /// <param name="nickName">昵称</param>
    /// <param name="current">当前页码，页码从 1 开始，默认值：<see cref="IPagedModel.DefaultCurrent"/></param>
    /// <param name="pageSize">页大小，如果为 0 必定返回空集合，默认值：<see cref="IPagedModel.DefaultPageSize"/></param>
    /// <returns>示例分页表格查询结果数据</returns>
    [HttpGet, PermissionFilter(ControllerName + nameof(SysButtonType.Query))]
    public async Task<ApiResponse<PagedModel<TableExampleDTO>>> QueryAsync(
        [FromQuery] string? title = null,
        [FromQuery] bool? disable = null,
        [FromQuery] string? fileName = null,
        [FromQuery] string? url = null,
        [FromQuery] string? createUser = null,
        [FromQuery] DateTimeOffset[]? creationTime = null,
        [FromQuery] string? operatorUser = null,
        [FromQuery] string? name = null,
        [FromQuery] string? email = null,
        [FromQuery] Architecture? architecture = null,
        [FromQuery] Gender? gender = null,
        [FromQuery] string? nickName = null,
        [FromQuery] int current = IPagedModel.DefaultCurrent,
        [FromQuery] int pageSize = IPagedModel.DefaultPageSize)
    {
        var r = await exampleRepo.QueryAsync(title, disable, fileName, url, createUser, creationTime, operatorUser, name, email, architecture, gender, nickName, current, pageSize);
        return r;
    }

}

